<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[vim常用命令]]></title>
    <url>%2F2019%2F06%2F27%2Fvim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[使用前需要知道的vim 是对vi的扩展，文中的很多操作是vi通用的vi是区分大小写的命令的，也就是说 g与G 是不同的命令在不同模式下，快捷键是不一样的 模式分 一般模式 编辑模式 指令模式一般模式用于文件内部操作，编辑模式用于输入编写等，指令模式用于对文本文件进行操作常用操作进入一般模式为开始编辑，或者按esc后进入按键效果a,i,r,o,A,I,R,O进入编辑模式h,backspace左移动l,space右移动j下移动k上移动0,移动到行首$移动到行末，1$表示当前行的行尾，2$表示当前行的下一行的行尾b按照单词向前移动 字首e按照单词向后移动 字尾w按照单词向后移至次一个字首H移动到屏幕最上 非空白字M移动到屏幕中央 非空白字L移动到屏幕最下 非空白字G移动到文档最后一行gg移动到文档第一行v进入光标模式，配合移动键选中多行Ctrl+f向下翻页Ctrl+b向上翻页u撤销上一次操作``回到上次编辑的位置dw删除这个单词后面的内容dd删除光标当前行dG删除光标后的全部文字d$删除本行光标后面的内容d0删除本行光标前面的内容y复制当前行，会复制换行符yy复制当前行的内容yyp复制当前行到下一行，此复制不会放到剪切板中nyy复制当前开始的n行p,P,.粘贴ddp当前行和下一行互换位置J合并行Ctrl+r重复上一次动作Ctrl+z暂停并退出ZZ保存离开xp交换字符后面的交换到前面~更换当前光标位置的大小写，并光标移动到本行右一个位置，直到无法移动光标详细操作按键效果Ctrl+e向下滚动Ctrl+b向上翻页b按照单词向前移动 字首B按照单词向前移动 字首 忽略一些标点符号e按照单词向后移动 字尾E按照单词向后移动 忽略一些标点符号w按照单词向后移至次一个字首W按照单词向后移至次一个字首 忽略一些标点符号H移动到屏幕最上 非空白字M移动到屏幕中央 非空白字L移动到屏幕最下 非空白字G移动到文档最后一行gg移动到文档第一行(光标到句尾)光标到局首{光标到段落开头}光标到段落结尾nG光标下移动到n行的首位n$光标移动到n行尾部n+光标下移动n行n-光标上移动n行查找命令指令效果*向下查找同样光标的字符#向上查找同样光标的字符/code查找 code 一样的内容，向后?code查找 code 一样的内容，向前n查找下一处N查找上一处ma在光标处做一个名叫a的标记 可用26个标记 (a~z)`a移动到一个标记ad`a删除当前位置到标记a之间的内容:marks查看所有标记指令模式指令效果:q一般退出:q!退出不保存:wq保存退出:w filename另存为 filename:jumps历史编辑文档记录:set nu设置行号显示:set nonu取消行号显示:set显示设置参数:set autoindent自动缩排，回车与第一个非空格符对齐:syntax on/off根据程序语法高亮显示:set highlight高亮设置查看:set hlsearch查找代码高亮显示:nohlsearch暂时关闭高亮显示:set nohlsearch永久关闭高亮显示:set bg=dark设置暗色调:set bg=light设置亮色调屏幕翻滚按键效果Ctrl+f向文件尾翻一屏幕Ctrl+b向文件首翻一屏幕Ctrl+d向文件尾翻半屏幕Ctrl+u向文件首翻半屏幕插入命令按键效果i在光标前I在当前行首a在光标后A在当前行尾部o在当前行下新开一行O在当前行上新开一行r替换当前字符R替换当前行及后面的字符，直到按esc为止s从当前行开始，以输入的文本替代指定数目的字符S删除指定数目的行，并以输入的文本替代ncw,nCW修改指定数目n的字符nCC修改指定数目n的行删除命令按键效果ndw,nDW删除光标开始及其后 n-1 个字符dw删除这个单词后面的内容dd删除光标当前行dG删除光标后的全部文字d$删除本行光标后面的内容d0删除本行光标前面的内容ndd删除当前行，以及其后的n-1行x删除一个字符，光标后X删除一个字符，光标前Ctrl+u删除输入模式下的输入的文本多窗口模式指令效果:split创建新窗口Ctrl+w切换窗口Ctrl-w =所有窗口一样高Ctrl-w+方向键多窗口视图切换多文件编辑指令效果:args列出当前编辑的文件名:next打开多文件，使用 n(Next) p(revious)N(ext) 切换:file列出当前打开的所有文件vim 自定义技巧复制粘贴取消缩进1:set paste进入paste模式以后，可以在插入模式下粘贴内容，不会有任何变形这个参数做了这么多事：123456789textwidth设置为0wrapmargin设置为0set noaiset nosisofttabstop设置为0revins重置ruler重置showmatch重置formatoptions使用空值下面的选项值不变，但却被禁用123lispindentexprcindent绑定快捷键来激活/取消 paste模式1:set pastetoggle=&lt;F11&gt;出现粘贴换行符错位，设置一下 .vimrc123456" this can change way of paste words:set paste" default tabstop=8:set tabstop=4" use keyboard F11 to change paste mode:set pastetoggle=&lt;F11&gt;vim 缩进Normal Mode下，命令&gt;&gt;将对当前行增加缩进，而命令&lt;&lt;则将对当前行减少缩进在命令前使用数字，来指定命令作用的范围15&lt;&lt;在Insert/Replace Mode下Ctrl-Shift-t可以增加当前行的缩进Ctrl-Shift-d则可以减少当前行的缩进使用0-Ctrl-Shift-d命令，将移除所有缩进需要注意的是，当我们输入命令中的“0”时，Vim会认为我们要在文本中插入一个0，并在屏幕上显示输入的“0”；然后当我们执行命令0-Ctrl-Shift-d时，Vim就会意识到我们要做的是减少缩进，这时0会就会从屏幕上消失vim tab缩进tab缩进宽度默认为8个空格我们可以使用以下命令，来修改缩进宽度1234:set tabstop=4:set softtabstop=4:set shiftwidth=4:set expandtabtabstop:表示一个 tab 显示出来是多少个空格的长度默认 8softtabstop:表示在编辑模式的时候按退格键的时候退回缩进的长度当使用 expandtab 时特别有用。shiftwidth:表示每一级缩进的长度一般设置成跟 softtabstop 一样。 当设置成 expandtab 时缩进用空格来表示noexpandtab 则是用制表符表示一个缩进expandtab选项，用来控制是否将Tab转换为空格,但是这个选项并不会改变已经存在的文本，如果需要应用此设置将所有Tab转换为空格，需要执行1:retab!vim 自动缩进cindent1:set cindentvim可以很好的识别出C和Java等结构化程序设计语言，并且能用C语言的缩进格式来处理程序的缩进结构smartindent1:set smartindent在这种缩进模式中，每一行都和前一行有相同的缩进量，同时这种缩进形式能正确的识别出花括号，当遇到右花括号（}），则取消缩进形式。此外还增加了识别C语言关键字的功能。如果一行是以#开头的，那么这种格式将会被特殊对待而不采用缩进格式。autoindent1:set autoindent在这种缩进形式中，新增加的行和前一行使用相同的缩进形式显示隐藏符号默认不显示 :set nolist显示 :set invlist12" normal is :set nolist | show hide is :set invlist:set nolist使用vim寄存器使用vim寄存器 “+p 粘贴根本不用考虑是否自动缩进，是否paste模式，直接原文传递如果想保存原寄存器中内容而同时增加新的内容就要在yy前增加标签标签以双引号开始，跟着的是标签名称，可以是数字0-9，也可以是26个字母显示所有寄存器内容1:reg注意两个特殊的寄存器：* 和 +这两个寄存器是和系统相通的，前者关联系统选择缓冲区，后者关联系统剪切板通过它们可以和其他程序进行数据交换若寄存器列表里无 * 或 + 寄存器，则可能是由于没有安装vim的图形界面所致sudo apt-get install vim-gnome设置vim永远显示行号修改vim的配置文件加入 set nu1vi ~/.vimrc然后输入1set nu当然也可以输入其他配置类似12set nonusyntax onvimrc 常用配置123456789101112131415161718192021" open syntaxsyntax on" set not show line number can change by :set nu:set nonu" set show line number when in edit:set ruler" set tab button stop" default tabstop=8:set tabstop=4:set softtabstop=4:set shiftwidth=4:set expandtab" use keyboard F11 to change paste mode:set pastetoggle=&lt;F11&gt;" normal is :set nolist | show hide is :set invlist:set nolist" fix mac vim keyboard delete can not delete error, so as set backspace=indent,eol,startset backspace=2" ------------" install plug-in manager see https://github.com/VundleVim/Vundle.vim查看vim设置的样例文件linux 查看1find /usr/share/ -name "*example.vim"mac 查看方法1locate example.vim如果是第一次运行会报告错误，需要建立索引，根据提示操作即可，建议运行一次 updatedb找到标识为 example.vim 的文件就是样例Referencevim 常用快捷键及使用技巧First HeaderSecond HeaderSome say the world will end in fire,Some say in ice.From what I’ve tasted of desireI hold with those who favor fire.But if it had to perish twice,I think I know enough of hateTo say that for destruction iceIs also greatAnd would suffice.]]></content>
      <categories>
        <category>vim</category>
      </categories>
      <tags>
        <tag>vim</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ios端利用VPS搭建的shadowsocks自制vpn]]></title>
    <url>%2F2019%2F06%2F25%2Fios%E7%AB%AF%E5%88%A9%E7%94%A8VPS%E6%90%AD%E5%BB%BA%E7%9A%84shadowsocks%E8%87%AA%E5%88%B6vpn%2F</url>
    <content type="text"><![CDATA[依赖项Shadowsocks Serverios 手机安装有PP助手的Windows 操作系统PC操作步骤下载shadowrocket.ipa安装包到Windows电脑安装包百度云链接 密码:8aae将ios手机用数据线连接到Windows电脑 MAC OSX不可用；利用PP助手&gt;我的设备&gt;应用管理&gt;我的应用&gt;安装本地应用&gt;选择引用文件来选择已下载的shadowrocket.ipa文件在ios手机上进行安装；shadowrocket的配置在iOS 手机上安装成功shadowrocket安装成功，接下来便是要根据你在VPS上的Shadowsocks Server的配置(IP、端口号、密码、加密算法)来在手机上完成相应配置。下图是配置完以后，打开vpn进行使用的效果图👇那么具体该怎么配置呢，首先点击上图右上角的➕按钮，就能进入下图所示页面，然后在该页面中填好你的服务器上相应的配置信息，最后点击右上角的完成按钮，就大功告成啦！！！预知详细配置流程的朋友，请移步👉：iOS利器“小火箭”（Shadowrocket）最全使用教程ReferenceiOS利器“小火箭”（Shadowrocket）最全使用教程教你如何安装免费应用或者本地应用Some say the world will end in fire,Some say in ice.From what I’ve tasted of desireI hold with those who favor fire.But if it had to perish twice,I think I know enough of hateTo say that for destruction iceIs also greatAnd would suffice.]]></content>
      <categories>
        <category>ssh</category>
      </categories>
      <tags>
        <tag>vpn</tag>
        <tag>手机端</tag>
        <tag>shadowrocket</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo 框架下404页面的设置]]></title>
    <url>%2F2019%2F06%2F25%2FHexo-%E6%A1%86%E6%9E%B6%E4%B8%8B404%E9%A1%B5%E9%9D%A2%E7%9A%84%E8%AE%BE%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[前言​ 今天心情不错，Google Search Console 上一直报错通过不了的站点地图终于获取成功了…别问我为什么，它之前绝对是抽了，好好地把旧版更新到新版，结果各种问题。在sitemap这个问题上折腾了有四天多(上周四 — 本周二)，此处po图同庆下。​ 补充下站点地图的作用，搜索引擎的工作并非如常人所想，只要你发布相应的网页，内容就会被搜索引擎自动收录。而是需要网站向搜索引擎提交自身链接，然后相应的网页信息才会在搜索时按照rank机制进行显示。这里具体说明下Baidu常用的站点内容推送方式。多种推送站点内容的方案：主动推送：通过 API 接口推送站点内容，实时性较高自动推送：在网页内添加 JS 脚本，每当页面被访问的时候会将页面 url 推送给百度，比较被动sitemap：填写站点地图文件地址，百度会周期性的抓取其中的内容进行分析收录，收录效率比较低手动提交：手动填写链接地址进行收录本站在针对百度搜索引擎收录上使用三种推送方案：主动推送 该方式需要借助hexo-baidu-url-submit插件实现快捷推送，在根目录下安装相应依赖1npm install hexo-baidu-url-submit --save并在站点配置文件_confirg.yml上添加下列语句：123456# 百度主动推送baidu_url_submit: count: 100 # 提交最新的一个链接 host: yearito.cn # 在百度站长平台中注册的域名 token: xxxxx # 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里! path: baidu_urls.txt # 文本文档的地址， 新链接会保存在此文本文档里然后在站点配置文件中修改部署策略123456789 # Deployment ## Docs: https://hexo.io/docs/deployment.html- deploy:- type: git- repo: git@yearito.cn:~/blog.yearito.git+ deploy:+ - type: git+ repo: git@yearito.cn:~/blog.yearito.git+ - type: baidu_url_submitter # 百度每次部署的时候将会自动推送网站内容到百度。自动推送 Next 主题配置文件中内置了一键开启百度自动推送的选项：12# Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEObaidu_push: true每次访问站点页面都会通过以上脚本推送本页 url 到百度。sitemap 在站长页面提交属于自己网站的sitemap.xml文件，若判断提交成功，则搜索引擎的爬虫会间隔一段时间爬取sitemap中所收录网站页面的内容信息。​ 建议不采用主动推送方式进行内容推送，在你未将自己的GitHub pages仓库的属性设为private之前，这样做风险很大…​ 码到这感觉应该单独开个页面，系统讲述下以上内容，包括网站验证的几种方式、sitemap.xml的格式、robots.txt的具体配置等等，本站毕竟新开张，刚刚才被Google收录…陆陆续续我也会出相应的博文的，接下来回归正题。常规404页面常规404页面，便是你在主题配置_config.yml中把内置的menu下相应注释符号去掉，然后它会显示一个很难以描述的404页面，本质上和创建tags、categories等页面一样。还有一种常规方式就是创建腾讯公益的404页面，这也是hexo框架下很多用户会采取的404页面。既能有效提示页面不存在，还能做下公益，何乐而不为~言归正传，下面是该方式的具体操作步骤👇：进入本地hexo目录，输入以下命令1hexo new page "404"打开刚新建的页面文件，默认在 Hexo 文件夹根目录下 /source/404/index.md ，输入以下代码：12345678910111213141516---title: 404 Not Found：该页无法显示toc: falsecomments: falsepermalink: /404---&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="UTF-8" /&gt; &lt;title&gt;404&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;script type="text/javascript" src="//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js" homePageName="返回首页" homePageUrl="https://www.nickyam.com"&gt;&lt;/script&gt;true&lt;/body&gt;&lt;/html&gt;然后部署上传1hexo clean &amp;&amp; hexo g &amp;&amp; hexo d自定义404.html页面看到这里应该会有不少人会和我一样，想DIY属于自己的独特404页面，这个过程中本人也进行很多尝试，也总结出一些设置心得，首先推荐一个不错的HTML网站CodePen，上面有不少可以用来制作404页面的素材源码。制作自定义html页面，在hexo主题下会遇到各种bug:404页面只在一级域名下一级子路径下能正常跳转显示，在二级乃至三级···子路径下无法正常显示解决方法: 不要使用相对路径对依赖文件进行调用！！！使用链接形式对依赖文件进行调用12345//将 .html中下列语句&lt;script src="./rain_script.js"&gt;&lt;/script&gt;//修改为&lt;script src="https://zejinwang.com/rain_script.js"&gt;&lt;/script&gt;//注意:不要使用http为前缀的路径，Chrome不支持读取http外链按照很多博文描述的思路，将html依赖的css文件和js文件放在根目录下的source文件夹下或者source/你创建的page文件夹 下，在经过 hexo g 生成和 hexo d上传后，无法正常调用依赖的两个文件解决方法：将依赖的js和css依赖文件放到主题所在目录的source文件下，而不是hexo根目录下的source文件夹中创建步骤创建自定义page文件夹 1hexo new page "404 not found" 将‘’404 not found‘’文件夹下的index.md文件替换为你准备的index.html文件将index.html文件以来的css和js文件依赖放到主题目录下的source文件夹中修改theme目录下的主题配置文件中menu部分，添加上自定义page信息自定义页面效果展示见404特效和源码雨特效。ReferenceHexo博客添加腾讯404公益页面hexo创建404页面Hexo 搭建个人博客系列：部署上线篇Some say the world will end in fire,Some say in ice.From what I’ve tasted of desireI hold with those who favor fire.But if it had to perish twice,I think I know enough of hateTo say that for destruction iceIs also greatAnd would suffice.]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>404</tag>
        <tag>自定义</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一个有关Wang's Blog诞生的故事]]></title>
    <url>%2F2019%2F06%2F22%2FHexo-%E6%90%AD%E7%AB%99%E4%BD%93%E9%AA%8C%2F</url>
    <content type="text"><![CDATA[​ 谈到选择何种网站基础框架，自然少不了一番内心的天人交战：Wordpress？、Hexo?写到这里，其实是我词穷了，本来还想多列举一些可以用作网站搭建的框架，奈何只调研了这两个主要搭站框架此时此刻懒得去查。说到上面两个框架，不得不提本人搭站旅程中的艰辛坎坷：背景​ 在本站正式诞生之前，其实本人还搭过一个基于WordPress的网站，算算时间~~该故事不巧发生在北京时间2019年6月15日，传说中的上周…那时的我，还是折腾界的低级玩家 ：日常专注于踏踏实实的生活、看paper、上课、写作业，闲了敲敲专业相关的代码。在CSDN上分享paper reading后，发现其排版和网站界面做的真的是奇丑无比，难以忍受 (该观点仅代表 ZejinWang 的立场)。当时在考虑该入简书坑，还是掘金坑，这两家的风格个人还是比较喜欢的。那时的我还是个不懂如何使用VPS，如何创建VPN的萌新，对这一神秘领域又是向往又小心翼翼。​ 那么是什么促使我迈入高玩阵列？不是爱 2019年6月1日，在这全中国都洋溢着儿童节快乐气氛的日子里，翻墙界发生了一场波及全体成员的大地震，GFW出手了。此时此刻你还想重温翻车现场氛围的，请转往👉shadowsocks玩家的呐喊现场。嗯….很不幸的，室友的VPS被封了，共享给我的VPN不能用了，产生用户粘性的我，只能自力更生，丰衣足食…当时在Bandwagon和Vultr中犹豫许久，强迫症玩家总是任意抠细节，对比各种性能优势。有兴趣的朋友，见2019优质VPS服务商推荐。最后图稳定和性价比，选择了搬瓦工(学生党经济适用款)。​ 配置完shadowsocks server 和 client（加密方式建议 chacha20）就能继续愉快地科学上网了，说起来买的套餐一个月有1000G流量，完全用不完。有认识的朋友在浩如烟海的信息流中看到本帖，同时有翻墙需要，请毫不吝啬的call me！有机会我多出几个ssh相关的帖子（base linux or censos），共享给大家。WordPress初体验​ shadowsocks已经搭建完毕，巨额月流量也足够本人肆意挥霍，高枕无忧~~然而，故事到此才刚刚开始…看着VPS中1024MB RAM只使用了200MB而已，不足20%。这对经常把计算资源利用到极(崩)致(溃)的人，这怎么能忍。查了前人利用VPS常干的事，发现目前而言搭个人博客对我来说是最适合的。Hexo or Wordpress ? 本着操作尽量方便简单，同时保持网站加载速度的原则，当时的我天真的选择了后者。​ 折腾WordPress大概也有一周时间吧，没想到看着教程颇为简单的它，在自定义网站环节的操作难度会如此大。估计是我对直接操作UI这方面实在是没什么天赋，就和从小到大我那贫瘠的艺术细胞那样…就这样折腾完后，网站静态页面和博客主页成型了，然而我也决定放弃后续操作，太折腾，太难弄美观了，嗯，先罢工一段时间吧…Hexo的见猎心喜​ 实习的时候，看到工位边上的张同学在尝试用hexo作为框架搭建个人博客，瞄过几眼后，我心动了…决定再次开工，搭建基于Hexo + Github的个人博客。​ 确定搭建基于Hexo + Github框架的个人博客的方案后，接下来便是付诸实践的时候。当时首先考虑到的是该选择哪款主题作为基础，然后在上面进行个性化定制，此处附hexo官网两百多款主题的直达通道。每当做选择的时候，总是最为心力交瘁的时刻，会进行很细致的效果对比、可操作空间大小、主题是否在及时优化迭代等，各方面因素导致自己在这个阶段浪费了不少时间。本人先后尝试了pure和next，在折腾pure主题的时候，很明显的感觉到pure的作者身为前端开发者，在代码习惯上并不是很OK，主题框架写的有点乱偏私人化，导致修改配置的接口做的不是很好，个性化订制中很容易出各种bug，体验很不美丽。最终考虑到next的生态更为完善、可改动空间极大，定稿使用后者。踩坑心得确定好你青睐的配置环境，按序安装相应依赖(版本不兼容对新手很不友好)学会更好地搜集资料，选择适合你选择的hexo+next版本的资料好的引路人可以让你少走很多弯路，好的教程也一样(推一套无死角教程免费替作者打广告)Hexo 搭建个人博客系列：基础建站篇Hexo 搭建个人博客系列：部署上线篇Hexo 搭建个人博客系列：进阶设置篇Hexo 搭建个人博客系列：主题美化篇Hexo 搭建个人博客系列：写作技巧篇操作细节上注意备份！！！作为一名IT从业者，备份意识怎么能不扎根心里…Some say the world will end in fire,Some say in ice.From what I’ve tasted of desireI hold with those who favor fire.But if it had to perish twice,I think I know enough of hateTo say that for destruction iceIs also greatAnd would suffice.]]></content>
  </entry>
</search>
