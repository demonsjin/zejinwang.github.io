<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Wang&#39;s Blog</title>
  
  <subtitle>Welcome here!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zejinwang.com/"/>
  <updated>2019-06-25T06:22:21.821Z</updated>
  <id>https://zejinwang.com/</id>
  
  <author>
    <name>ZejinWang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo 框架下404页面的设置</title>
    <link href="https://zejinwang.com/2019/06/25/Hexo-%E6%A1%86%E6%9E%B6%E4%B8%8B404%E9%A1%B5%E9%9D%A2%E7%9A%84%E8%AE%BE%E7%BD%AE/"/>
    <id>https://zejinwang.com/2019/06/25/Hexo-框架下404页面的设置/</id>
    <published>2019-06-25T04:27:46.000Z</published>
    <updated>2019-06-25T06:22:21.821Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>​ 今天心情不错，<strong>Google Search Console</strong> 上一直报错通过不了的站点地图终于获取成功了…别问我为什么，它之前绝对是抽了，好好地把旧版更新到新版，结果各种问题。在<strong>sitemap</strong>这个问题上</p><p>我折腾了绝对有四天(上周四 —— 本周二)，此处应该po图同庆不是么。</p><p><img src="/2019/06/25/Hexo-框架下404页面的设置/sitemap.png" alt="站点地图验收成功"></p><p>​ 补充下站点地图的作用，搜索引擎的工作并非如常人所想，只要你发布相应的网页，内容就会被搜索引擎自动收录。而是需要网站向搜索引擎提交自身链接，然后相应的网页信息才会在搜索时按照rank机制进行显示。这里具体说明下<strong>Baidu</strong>常用的站点内容推送方式。</p><blockquote><p>多种推送站点内容的方案：</p><ul><li>主动推送：通过 API 接口推送站点内容，实时性较高</li><li>自动推送：在网页内添加 JS 脚本，每当页面被访问的时候会将页面 url 推送给百度，比较被动</li><li>sitemap：填写站点地图文件地址，百度会周期性的抓取其中的内容进行分析收录，收录效率比较低</li><li>手动提交：手动填写链接地址进行收录</li></ul></blockquote><p>本站在针对百度搜索引擎收录上使用三种推送方案：</p><ul><li><strong>主动推送</strong> 该方式需要借助[hexo-baidu-url-submit][<a href="https://github.com/huiwang/hexo-baidu-url-submit]插件实现快捷推送，在根目录下安装相应依赖" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/huiwang/hexo-baidu-url-submit]插件实现快捷推送，在根目录下安装相应依赖</a></li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-baidu-url-submit --save</span><br></pre></td></tr></table></figure><p>并在站点配置文件_confirg.yml上添加下列语句：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 百度主动推送</span></span><br><span class="line"><span class="attr">baidu_url_submit:</span></span><br><span class="line"><span class="attr">  count:</span> <span class="number">100</span>  <span class="comment"># 提交最新的一个链接</span></span><br><span class="line"><span class="attr">  host:</span> <span class="string">yearito.cn</span>  <span class="comment"># 在百度站长平台中注册的域名</span></span><br><span class="line"><span class="attr">  token:</span> <span class="string">xxxxx</span>  <span class="comment"># 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里!</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">baidu_urls.txt</span>  <span class="comment"># 文本文档的地址， 新链接会保存在此文本文档里</span></span><br></pre></td></tr></table></figure><p>然后在站点配置文件中修改部署策略</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment"># Deployment</span></span><br><span class="line">  <span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">- deploy:</span></span><br><span class="line"><span class="attr">-   type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">-   repo:</span> <span class="string">git@yearito.cn:~/blog.yearito.git</span></span><br><span class="line"><span class="string">+</span> <span class="attr">deploy:</span></span><br><span class="line"><span class="string">+</span> <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line"><span class="string">+</span>   <span class="attr">repo:</span> <span class="string">git@yearito.cn:~/blog.yearito.git</span></span><br><span class="line"><span class="string">+</span> <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">baidu_url_submitter</span> <span class="comment"># 百度</span></span><br></pre></td></tr></table></figure><p>每次部署的时候将会自动推送网站内容到百度。</p><ul><li><p><strong>自动推送</strong> Next 主题配置文件中内置了一键开启百度自动推送的选项：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEO</span></span><br><span class="line"><span class="attr">baidu_push:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ul><p>每次访问站点页面都会通过以上脚本推送本页 url 到百度。</p><ul><li><strong>sitemap</strong> 在站长页面提交属于自己网站的sitemap.xml文件，若判断提交成功，则搜索引擎的爬虫会间隔一段时间爬取sitemap中所收录网站页面的内容信息。</li></ul><p>​ 建议不采用主动推送方式进行内容推送，在你未将自己的<strong>GitHub pages</strong>仓库的属性设为<strong>private</strong>之前，这样做风险很大…</p><p>​ 码到这感觉应该单独开个页面，系统讲述下以上内容，包括<strong>网站验证的几种方式</strong>、<strong>sitemap.xml的格式</strong>、<strong>robots.txt的具体配置</strong>等等，本站毕竟新开张，刚刚才被Google收录…陆陆续续我也会出相应的博文的，接下来回归正题。</p><h2 id="常规404页面"><a href="#常规404页面" class="headerlink" title="常规404页面"></a>常规404页面</h2><p>常规404页面，便是你在主题配置_config.yml中把内置的menu下相应注释符号去掉，然后它会显示一个很难以描述的404页面，本质上和创建<strong>tags</strong>、<strong>categories</strong>等页面一样。</p><p>还有一种常规方式就是创建腾讯公益的404页面，这也是hexo框架下很多用户会采取的404页面。既能有效提示页面不存在，还能做下公益，何乐而不为~</p><p>言归正传，下面是该方式的具体操作步骤👇：</p><ul><li>进入本地hexo目录，输入以下命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">"404"</span></span><br></pre></td></tr></table></figure><ul><li>打开刚新建的页面文件，默认在 Hexo 文件夹根目录下 /source/404/index.md ，输入以下代码：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 404 Not Found：该页无法显示</span><br><span class="line">toc: false</span><br><span class="line">comments: false</span><br><span class="line">permalink: /404</span><br><span class="line">---</span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">title</span>&gt;</span>404<span class="tag">&lt;/<span class="name">title</span>&gt;</span>                                                                                                                                        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js"</span> <span class="attr">homePageName</span>=<span class="string">"返回首页"</span> <span class="attr">homePageUrl</span>=<span class="string">"https://www.nickyam.com"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">true<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>然后部署上传</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><h2 id="自定义404-html页面"><a href="#自定义404-html页面" class="headerlink" title="自定义404.html页面"></a>自定义404.html页面</h2><p>看到这里应该会有不少人会和我一样，想<strong>DIY</strong>属于自己的独特404页面，这个过程中本人也进行很多尝试，也总结出一些设置心得，首先推荐一个不错的HTML网站<a href="https://codepen.io/" rel="external nofollow noopener noreferrer" target="_blank"><strong>CodePen</strong></a>，上面有不少可以用来制作404页面的素材源码。</p><p>制作自定义html页面，在hexo主题下会遇到各种<strong>bug</strong>:</p><blockquote><ol><li>404页面只在一级域名下一级子路径下能正常跳转显示，在二级乃至三级···子路径下无法正常显示</li></ol><p>解决方法: 不要使用<strong>相对路径</strong>对依赖文件进行调用！！！使用链接形式对依赖文件进行调用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="comment">//将 .html中下列语句</span></span><br><span class="line">&gt;<span class="xml"><span class="tag">&lt;<span class="name">script</span>  <span class="attr">src</span>=<span class="string">"./rain_script.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&gt;<span class="comment">//修改为</span></span><br><span class="line">&gt;<span class="xml"><span class="tag">&lt;<span class="name">script</span>  <span class="attr">src</span>=<span class="string">"https://zejinwang.com/rain_script.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&gt;<span class="comment">//注意:不要使用http为前缀的路径，Chrome不支持读取http外链</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>&gt;</p><blockquote><p>按照很多博文描述的思路，将html依赖的css文件和js文件放在根目录下的source文件夹下或者source/你创建的page文件夹 下，在经过 hexo g 生成和 hexo d上传后，无法正常调用依赖的两个文件</p><p>解决方法：将依赖的<strong>js</strong>和<strong>css</strong>依赖文件放到主题所在目录的source文件下，而不是hexo根目录下的source文件夹中</p></blockquote><p><strong>创建步骤</strong></p><p>1.创建自定义page文件夹</p><ol><li><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">"404 not found"</span></span><br></pre></td></tr></table></figure></li><li><p>将‘’404 not found‘’文件夹下的index.md文件替换为你准备的index.html文件</p></li><li><p>将index.html文件以来的css和js文件依赖放到主题目录下的source文件夹中</p></li><li><p>修改theme目录下的主题配置文件中menu部分，添加上自定义page信息</p></li></ol><p><img src="/2019/06/25/Hexo-框架下404页面的设置/menu.png" alt="主题配置文件修改部分"></p><p>自定义页面效果展示见<a href="https://zejinwang.com/404_not_found">404特效</a>和<a href="https://zejinwang.com/coderain">源码雨特效</a>。</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[][<a href="http://yearito.cn/posts/hexo-deploy-to-VPS.html" rel="external nofollow noopener noreferrer" target="_blank">http://yearito.cn/posts/hexo-deploy-to-VPS.html</a>]</p><p><a href="http://yearito.cn/posts/hexo-deploy-to-VPS.html" rel="external nofollow noopener noreferrer" target="_blank">Hexo 搭建个人博客系列：部署上线篇</a></p><p><a href="https://www.nickyam.com/tech/hexo-add-tencent-404-page.html" rel="external nofollow noopener noreferrer" target="_blank">Hexo博客添加腾讯404公益页面</a></p><p><a href="http://www.xnian.top/2017/11/21/hexo%E5%88%9B%E5%BB%BA404%E9%A1%B5%E9%9D%A2/" rel="external nofollow noopener noreferrer" target="_blank">hexo创建404页面</a></p><blockquote class="blockquote-center"><p><em>Some say the world will end in fire,</em></p><p><em>Some say in ice.</em></p><p><em>From what I’ve tasted of desire</em></p><p><em>I hold with those who favor fire.</em></p><p><em>But if it had to perish twice,</em></p><p><em>I think I know enough of hate</em></p><p><em>To say that for destruction ice</em></p><p><em>Is also great</em></p><p><em>And would suffice.</em></p></blockquote>]]></content>
    
    <summary type="html">
    
      本文主要讲述如何在hexo框架下设置自定义404.html的方法
    
    </summary>
    
      <category term="hexo" scheme="https://zejinwang.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://zejinwang.com/tags/hexo/"/>
    
      <category term="404" scheme="https://zejinwang.com/tags/404/"/>
    
      <category term="自定义" scheme="https://zejinwang.com/tags/%E8%87%AA%E5%AE%9A%E4%B9%89/"/>
    
  </entry>
  
  <entry>
    <title>一个有关Wang&#39;s Blog诞生的故事</title>
    <link href="https://zejinwang.com/2019/06/22/Hexo-%E6%90%AD%E7%AB%99%E4%BD%93%E9%AA%8C/"/>
    <id>https://zejinwang.com/2019/06/22/Hexo-搭站体验/</id>
    <published>2019-06-22T02:35:22.000Z</published>
    <updated>2019-06-23T09:40:08.731Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>​ 谈到选择何种网站基础框架，自然少不了一番内心的天人交战：<strong>Wordpress</strong>？、<strong>Hexo</strong>?写到这里，其实是我词穷了，本来还想多列举一些可以用作网站搭建的框架，奈何只调研了这两个主要搭站框架<del>此时此刻懒得去查</del>。</p><p>说到上面两个框架，不得不提本人搭站旅程中的艰辛坎坷：</p><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>​ 在本站正式诞生之前，其实本人还搭过一个基于WordPress的网站，算算时间~~该故事不巧发生在北京时间<u>2019年6月15日</u>，传说中的上周…那时的我，还是折腾界的<em>低级玩家</em> ：日常专注于踏踏实实的生活、看paper、上课、写作业，闲了敲敲专业相关的代码。在CSDN上分享<em>paper reading</em>后，发现其排版和网站界面做的真的是奇丑无比，难以忍受 (该观点仅代表 <em>ZejinWang</em> 的立场)。当时在考虑该入简书坑，还是掘金坑，这两家的风格个人还是比较喜欢的。那时的我还是个不懂如何使用VPS，如何创建VPN的萌新，对这一神秘领域又是向往又小心翼翼。</p><p>​ 那么是什么促使我迈入高玩阵列？<del>不是爱</del> 2019年6月1日，在这全中国都洋溢着儿童节快乐气氛的日子里，翻墙界发生了一场波及全体成员的大地震，GFW出手了。此时此刻你还想重温翻车现场氛围的，请转往👉<a href="https://github.com/shadowsocks/shadowsocks-windows/issues/2366" rel="external nofollow noopener noreferrer" target="_blank">shadowsocks玩家的呐喊现场</a>。嗯….很不幸的，室友的VPS被封了，共享给我的VPN不能用了，产生用户粘性的我，只能<em>自力更生，丰衣足食</em>…当时在Bandwagon和Vultr中犹豫许久，强迫症玩家总是任意抠细节，对比各种性能优势。有兴趣的朋友，见<a href="https://zhuanlan.zhihu.com/p/31856700" rel="external nofollow noopener noreferrer" target="_blank">2019优质VPS服务商推荐</a>。最后图稳定和性价比，选择了搬瓦工(学生党经济适用款)。</p><p>​ 配置完shadowsocks server 和 client<em>（加密方式建议 chacha20）</em>就能继续愉快地<strong>科学上网</strong>了，说起来买的套餐一个月有1000G流量，完全用不完。有认识的朋友在浩如烟海的信息流中看到本帖，同时有翻墙需要，请毫不吝啬的<strong>call me</strong>！有机会我多出几个ssh相关的帖子（base <strong>linux</strong> or <strong>censos</strong>），共享给大家。</p><h3 id="WordPress初体验"><a href="#WordPress初体验" class="headerlink" title="WordPress初体验"></a>WordPress初体验</h3><p>​ shadowsocks已经搭建完毕，巨额月流量也足够本人肆意挥霍，高枕无忧~~然而，故事到此才刚刚开始…看着VPS中<strong>1024MB RAM</strong>只使用了<strong>200MB</strong>而已，不足<strong>20%</strong>。这对经常把计算资源利用到极(崩)致(溃)的人，这怎么能忍。查了前人利用VPS常干的事，发现目前而言搭个人博客对我来说是最适合的。Hexo or Wordpress ? 本着操作尽量方便简单，同时保持网站加载速度的原则，当时的我天真的选择了后者。</p><p>​ 折腾WordPress大概也有一周时间吧，没想到看着教程颇为简单的它，在自定义网站环节的操作难度会如此大。估计是我对直接操作UI这方面实在是没什么天赋，就和从小到大我那贫瘠的艺术细胞那样…就这样折腾完后，<em>网站静态页面</em>和<em>博客主页</em>成型了，然而我也决定放弃后续操作，太折腾，太难弄美观了，嗯，先罢工一段时间吧…</p><h3 id="Hexo的见猎心喜"><a href="#Hexo的见猎心喜" class="headerlink" title="Hexo的见猎心喜"></a>Hexo的见猎心喜</h3><p>​ 实习的时候，看到工位边上的张同学在尝试用hexo作为框架搭建个人博客，瞄过几眼后，我心动了…决定再次开工，搭建基于<strong>Hexo + Github</strong>的个人博客。</p><p>​ 确定搭建基于<strong>Hexo + Github</strong>框架的个人博客的方案后，接下来便是付诸实践的时候。当时首先考虑到的是该选择哪款主题作为基础，然后在上面进行个性化定制，此处附hexo官网两百多款主题的<a href="https://hexo.io/themes/" rel="external nofollow noopener noreferrer" target="_blank">直达通道</a>。每当做选择的时候，总是最为心力交瘁的时刻，会进行很细致的效果对比、可操作空间大小、主题是否在及时优化迭代等，各方面因素导致自己在这个阶段浪费了不少时间。</p><p>本人先后尝试了<strong>pure</strong>和<strong>next</strong>，在折腾pure主题的时候，很明显的感觉到pure的作者身为前端开发者，在代码习惯上并不是很OK，主题框架写的有点乱偏私人化，导致修改配置的接口做的不是很好，个性化订制中很容易出各种<strong>bug</strong>，体验很不美丽。最终考虑到next的生态更为完善、可改动空间极大，定稿使用后者。</p><blockquote><p>踩坑心得</p><ul><li>确定好你青睐的配置环境，按序安装相应依赖(版本不兼容对新手很不友好)</li><li>学会更好地搜集资料，选择适合你选择的hexo+next版本的资料</li><li>好的引路人可以让你少走很多弯路，好的教程也一样(推一套无死角教程<del>免费替作者打广告</del>)<ul><li><a href="http://yearito.cn/posts/hexo-get-started.html" rel="external nofollow noopener noreferrer" target="_blank">Hexo 搭建个人博客系列：基础建站篇</a></li><li><a href="http://yearito.cn/posts/hexo-deploy-to-VPS.html" rel="external nofollow noopener noreferrer" target="_blank">Hexo 搭建个人博客系列：部署上线篇</a></li><li><a href="http://yearito.cn/posts/hexo-advanced-settings.html" rel="external nofollow noopener noreferrer" target="_blank">Hexo 搭建个人博客系列：进阶设置篇</a></li><li><a href="http://yearito.cn/posts/hexo-theme-beautify.html" rel="external nofollow noopener noreferrer" target="_blank">Hexo 搭建个人博客系列：主题美化篇</a></li><li><a href="http://yearito.cn/posts/hexo-writing-skills.html" rel="external nofollow noopener noreferrer" target="_blank">Hexo 搭建个人博客系列：写作技巧篇</a></li></ul></li><li>操作细节上<strong>注意备份</strong>！！！作为一名IT从业者，备份意识怎么能不扎根心里…</li></ul></blockquote><blockquote class="blockquote-center"><p><em>Some say the world will end in fire,</em></p><p><em>Some say in ice.</em></p><p><em>From what I’ve tasted of desire</em></p><p><em>I hold with those who favor fire.</em></p><p><em>But if it had to perish twice,</em></p><p><em>I think I know enough of hate</em></p><p><em>To say that for destruction ice</em></p><p><em>Is also great</em></p><p><em>And would suffice.</em></p></blockquote>]]></content>
    
    <summary type="html">
    
      这是一篇交代本博客诞生缘由的文章
    
    </summary>
    
    
  </entry>
  
</feed>
